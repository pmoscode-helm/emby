suite: test service with load balancer enabled
chart:
  version: 9.9.9+test
  appVersion: 9.9.9
tests:
  - it: should render default service
    template: templates/service.yaml
    set:
      service.type: LoadBalancer
      ingress.enabled: false
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: v1
      - isKind:
          of: Service
      - equal:
          path: metadata.name
          value: RELEASE-NAME-emby
      - exists:
          path: spec.type
      - equal:
          path: spec.type
          value: LoadBalancer
      - lengthEqual:
          path: spec.ports
          count: 1

  - it: should not render "LoadBalancer" service, when service.type == "LoadBalancer" and Ingress is disabled
    template: templates/service-LB.yaml
    set:
      service.type: LoadBalancer
      ingress.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should render "LoadBalancer" service, when service.type == "LoadBalancer" and Ingress is enabled
    template: templates/service-LB.yaml
    set:
      service.type: LoadBalancer
      ingress.enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: v1
      - isKind:
          of: Service
      - equal:
          path: metadata.name
          value: RELEASE-NAME-emby-LB
      - exists:
          path: spec.type
      - equal:
          path: spec.type
          value: LoadBalancer
      - lengthEqual:
          path: spec.ports
          count: 1

  - it: should render default service with type "ClusterIP", when service.type == "LoadBalancer" and Ingress is enabled
    template: templates/service.yaml
    set:
      service.type: LoadBalancer
      ingress.enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: v1
      - isKind:
          of: Service
      - equal:
          path: metadata.name
          value: RELEASE-NAME-emby
      - exists:
          path: spec.type
      - equal:
          path: spec.type
          value: ClusterIP
      - lengthEqual:
          path: spec.ports
          count: 1